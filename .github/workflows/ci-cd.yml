name: Pipeline Automatizado
on:
  push:
    branches:
      - main
jobs:
  CI-ContinuousIntegration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Make new a .env file
        uses: SpicyPizza/create-envfile@v2.0.3
        with:
          envkey_PORT: 5000
          envkey_POSTGRES_PASSWORD: "postgres"
          envkey_POSTGRES_USER: "postgres"
          envkey_POSTGRES_DB: "tests"
          envkey_DATABASE_URL: "postgres://postgres:postgres@postgres:5432/tests"
          envkey_JWT_SECRET: "e3bd44f1-3b72-4791-bb1d-51637bc10e86"
          envkey_CRYPTR_SECRET: "b625f794-f0b8-47da-b559-f4a8d8b66bbc"
          directory: .
          file_name: .env.test
      - name: Run tests
        run: docker compose -f docker-compose-test.yml run backend npm run test:ci

  CD-PublishToDockerHub:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: CI-ContinuousIntegration
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/drivenpass:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/drivenpass:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  CD-DeployToRender:
    name: Deploy to Render
    needs: CD-PublishToDockerHub
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Trigger Render Deploy Hook
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl -X POST \
               -H "Content-Type: application/json" \
               -d '{}' \
               $RENDER_DEPLOY_HOOK_URL
    